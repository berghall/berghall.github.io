{"version":3,"sources":["webpack:///./src/components/layouts/blog-post-layout.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/theme.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/shared/FabButton.tsx"],"names":["Mobile","props","react","react_responsive_default","a","Object","assign","maxWidth","Default","minWidth","ContentArea","_ref","title","children","blog_post_layout_Default","Card_default","style","padding","marginBottom","marginTop","textAlign","blog_post_layout_Mobile","HeaderArea","_ref2","cover","FabButton","onClickHandler","navigate","height","width","backgroundColor","gatsby_image_default","fluid","blog_post_layout","_ref3","THEME","blogPost","layout","cardMaxWidth","margin","paddingTop","paddingLeft","paddingRight","paddingBottom","blog_post_layout_HeaderArea","blog_post_layout_ContentArea","__webpack_require__","d","__webpack_exports__","query","node","data","markdownRemark","frontmatter","childImageSharp","dangerouslySetInnerHTML","__html","html","showMoreButton","color","borderColor","blogListElement","avatar","index","cardSectionMaxWidth","header","backgroundImage","aboutButton","author","fontSize","desc","callToActionButton","fabButton","networkButton","aboutPage","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","createElement","Consumer","staticQueryData","render","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_2___default","_theme__WEBPACK_IMPORTED_MODULE_3__","position","marginLeft","zIndex","aria-label","onClick"],"mappings":"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","file":"component---src-templates-blog-post-tsx-dbdb866a615734921d81.js","sourcesContent":["import * as React from \"react\"\nimport Image, { FluidObject } from \"gatsby-image\"\nimport { navigate } from \"gatsby\"\nimport Card from \"@material-ui/core/Card\"\nimport Responsive from \"react-responsive\"\n\nimport THEME from \"../../theme\"\nimport FabButton from \"../shared/FabButton\"\n\nconst Mobile = props => <Responsive {...props} maxWidth={767} />\nconst Default = props => <Responsive {...props} minWidth={768} />\n\ninterface IContentAreaProps {\n  children: React.ReactNode\n  title: string\n}\n\ninterface IHeaderArea {\n  cover: FluidObject\n}\n\ninterface IBlogPostLayout {\n  children: React.ReactNode\n  title: string\n  cover: FluidObject\n}\n\nconst ContentArea = ({ title, children }: IContentAreaProps) => (\n  <>\n    <Default>\n      <Card style={{ padding: 50 }}>\n        <h1 style={{ marginBottom: 30, marginTop: 0, textAlign: \"center\" }}>\n          {title}\n        </h1>\n        {children}\n      </Card>\n    </Default>\n    <Mobile>\n      <Card style={{ padding: 15 }}>\n        <h1\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          {title}\n        </h1>\n        {children}\n      </Card>\n    </Mobile>\n  </>\n)\n\nconst HeaderArea = ({ cover }: IHeaderArea) => {\n  const goBack = () => navigate(\"/\")\n\n  return (\n    <>\n      <FabButton onClickHandler={goBack} />\n      <div style={{ height: \"auto\", width: \"auto\", backgroundColor: \"#176786\" }}>\n        {cover ? <Image fluid={cover} /> : null}\n      </div>\n    </>\n  )\n}\n\nexport default ({ title, cover, children }: IBlogPostLayout) => {\n  return (\n    <div style={{ backgroundColor: THEME.blogPost.layout.backgroundColor }}>\n      <Default>\n        <div\n          style={{\n            maxWidth: THEME.blogPost.layout.cardMaxWidth,\n            margin: \"0 auto\",\n            paddingTop: 40,\n            paddingLeft: 20,\n            paddingRight: 20,\n            paddingBottom: 40,\n          }}\n        >\n          <HeaderArea cover={cover} />\n          <ContentArea title={title}>{children}</ContentArea>\n        </div>\n      </Default>\n      <Mobile>\n        <HeaderArea cover={cover} />\n        <ContentArea title={title}>{children}</ContentArea>\n      </Mobile>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/blog-post-layout\"\nimport { FluidObject } from \"gatsby-image\"\n\ninterface IBlogPost {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        title: string\n        cover: {\n          childImageSharp: {\n            fluid: FluidObject\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default ({ data }: IBlogPost) => {\n  const node = data.markdownRemark\n  const cover =\n    node.frontmatter.cover && node.frontmatter.cover.childImageSharp\n      ? node.frontmatter.cover.childImageSharp.fluid\n      : null\n\n  return (\n    <Layout title={node.frontmatter.title} cover={cover}>\n      {\n        // tslint:disable:react-no-dangerous-html\n        <div dangerouslySetInnerHTML={{ __html: node.html }} />\n        // tslint:enable:react-no-dangerous-html\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $coverImageMaxWidth: Int!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            ... on ImageSharp {\n              fluid(maxWidth: $coverImageMaxWidth) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const THEME = {\n  blogPost: {\n    layout: {\n      cardMaxWidth: 1000,\n      backgroundColor: \"#eeeeee\",\n    },\n    showMoreButton: {\n      color: \"#059ce2\",\n      borderColor: \"#059ce2\",\n      backgroundColor: \"none\",\n      width: 130,\n    },\n  },\n  blogListElement: {\n    avatar: {\n      color: \"none\",\n      backgroundColor: \"#059ce2\",\n    },\n  },\n  index: {\n    layout: {\n      cardSectionMaxWidth: 800,\n      backgroundColor: \"#eeeeee\",\n    },\n    header: {\n      backgroundImage: \"linear-gradient(20deg, #176786, #2E819D)\",\n    },\n    aboutButton: {\n      color: \"white\",\n      borderColor: \"white\",\n      backgroundColor: \"none\",\n      width: 100,\n    },\n  },\n  author: {\n    avatar: {\n      width: 70,\n      height: 70,\n    },\n    title: {\n      color: \"white\",\n      fontSize: 30,\n    },\n    desc: {\n      color: \"white\",\n      fontSize: 20,\n      maxWidth: 500,\n    },\n  },\n  callToActionButton: {\n    width: 25,\n    height: 25,\n  },\n  fabButton: {\n    color: \"#176786\",\n    backgroundColor: \"white\",\n  },\n  networkButton: {\n    color: \"white\",\n    backgroundColor: \"#333\",\n    width: 45,\n    height: 45,\n  },\n  aboutPage: {\n    layout: {\n      cardMaxWidth: 800,\n      backgroundColor: \"#eeeeee\",\n    },\n  },\n}\n\nexport default THEME\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\"\nimport Fab from \"@material-ui/core/Fab\"\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport THEME from \"../../theme\"\n\nconst FabButton = ({ onClickHandler }: { onClickHandler: () => void }) => (\n  <Fab\n    style={{\n      position: \"absolute\" as any,\n      marginTop: 20,\n      marginLeft: 20,\n      zIndex: 50,\n      color: THEME.fabButton.color || \"#059ce2\",\n      backgroundColor: THEME.fabButton.backgroundColor || \"white\",\n    }}\n    aria-label=\"Back\"\n    onClick={onClickHandler}\n  >\n    <ArrowBackIcon />\n  </Fab>\n)\n\nexport default FabButton\n"],"sourceRoot":""}